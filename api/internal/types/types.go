// Code generated by goctl. DO NOT EDIT.
package types

type UploadResp struct {
	Msg  string `json:"msg"`
	Name string `json:"name"`
	Path string `json:"path"`
}

type UpdateFileReq struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type FileListReq struct {
	Page     uint64   `json:"page"`
	PageSize uint64   `json:"pageSize"`
	FileType string   `json:"fileType"`
	FileName string   `json:"fileName"`
	Period   []string `json:"period,optinal"`
}

type FileInfo struct {
	ID        int64  `json:"id"`
	UUID      string `json:"UUID"`
	UserUUID  string `json:"userUUID"`
	Name      string `json:"name"`
	FileType  string `json:"fileType"`
	Size      int64  `json:"size"`
	Path      string `json:"path"`
	Status    bool   `json:"status"`
	CreatedAt int64  `json:"createdAt"`
}

type FileListResp struct {
	PageList
	Data []FileInfo `json:"data"`
}

type ChangeStatusReq struct {
	ID     uint64 `json:"id"`
	Status bool   `json:"status"`
}

type DownloadReq struct {
	Id int64 `path:"id"`
}

type BaseMsg struct {
	Code int32  `json:"code"`
	Msg  string `json:"msg"`
	Data string `json:"data"`
}

type BaseResp struct {
	Code int32  `json:"code"`
	Msg  string `json:"msg"`
}

type SimpleMsg struct {
	Msg string `json:"msg"`
}

type PageInfo struct {
	Page     uint64 `json:"page"`
	PageSize uint64 `json:"pageSize"`
}

type PageList struct {
	Total uint64   `json:"total"`
	Data  []string `json:"data"`
}

type BaseInfo struct {
	ID        uint  `json:"id"`
	CreatedAt int64 `json:"createdAt"`
	UpdatedAt int64 `json:"updatedAt"`
	DeletedAt int64 `json:"deletedAt"`
}

type IdReq struct {
	ID uint `json:"id"`
}

type UUIDReq struct {
	UUID string `json:"uuid"`
}
